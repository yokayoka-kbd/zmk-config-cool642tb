#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        comb2 {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb3 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <22 23>;
        };

        comb4 {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        comb5 {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <9 8>;
            timeout-ms = <0>;
            layers = <2>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W         &kp E  &kp R  &kp T                        &kp Y  &kp U  &kp I      &kp O       &kp P
&mt LEFT_CONTROL A  &kp S         &kp D  &kp F  &kp G  &none      &none      &kp H  &kp J  &kp K      &kp L       &mt RIGHT_CONTROL MINUS
&mt LEFT_SHIFT Z    &kp X         &kp C  &kp V  &kp B  &none      &none      &kp N  &kp M  &kp COMMA  &kp PERIOD  &mt RIGHT_SHIFT SLASH
&kp LEFT_ALT        &kp LEFT_WIN  &mo 3  &mo 4  &mo 1  &kp SPACE  &kp ENTER  &mo 2                                &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1               &kp F2  &kp F3  &kp F4   &kp F5                   &kp HOME    &kp PAGE_UP             &kp UP_ARROW    &kp PAGE_DOWN    &kp BACKSPACE
&mt LEFT_CONTROL F6  &kp F7  &kp F8  &kp F9   &kp F10  &none   &none   &kp END     &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp RIGHT_CONTROL
&kp LEFT_SHIFT       &none   &none   &kp F11  &kp F12  &none   &none   &kp INSERT  &kp LS(K_CONTEXT_MENU)  &kp LC(SPACE)   &kp CAPSLOCK     &kp RIGHT_SHIFT
&trans               &trans  &trans  &trans   &trans   &trans  &trans  &trans                                                               &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        NUM {
            bindings = <
&kp NUMBER_1      &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                         &kp NUMBER_6      &kp N7     &kp N8            &kp N9             &kp N0
&kp LEFT_CONTROL  &kp TAB       &kp DELETE    &kp ESCAPE    &kp COLON      &none   &none   &kp MINUS         &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
&kp LEFT_SHIFT    &none         &none         &none         &kp SEMICOLON  &none   &none   &kp SINGLE_QUOTE  &kp GRAVE  &trans            &trans             &mt SLASH RIGHT_SHIFT
&trans            &trans        &trans        &trans        &trans         &trans  &trans  &trans                                                            &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4                  &none   &none  &none  &none  &none
&none         &none         &bt BT_CLR_ALL  &none         &none         &none   &none   &none   &none  &none  &none  &none
&none         &none         &none           &none         &none         &none   &none   &none   &none  &none  &none  &none
&trans        &trans        &trans          &trans        &trans        &trans  &trans  &trans                       &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&none             &none   &none   &none   &none                   &mkp MB4  &none     &none     &none     &none
&kp LEFT_CONTROL  &none   &none   &none   &none   &none   &none   &mkp MB5  &mkp MB1  &mkp MB2  &mkp MB3  &kp RIGHT_CONTROL
&kp LEFT_SHIFT    &none   &none   &none   &none   &none   &none   &none     &none     &none     &none     &kp RIGHT_SHIFT
&trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        layer_6 {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
